[{"C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\index.js":"1","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\App.js":"2","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\reportWebVitals.js":"3","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\routes.js":"4","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\pages\\page-not-found.js":"5","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\templates\\HomeTemplate.js":"6","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\components\\Navbar.js":"7","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\pages\\home\\Home.js":"8","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\components\\Footer.js":"9","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\redux\\reducers\\index.js":"10","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\redux\\reducers\\movie_reducer.js":"11","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\redux\\reducers\\cinema_reducer.js":"12","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\redux\\reducers\\schedule_reducer.js":"13","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\components\\Schedule.js":"14","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\components\\movie\\Header.js":"15","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\components\\movie\\Infomation.js":"16","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\components\\movie\\circle-store.js":"17","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\components\\movie\\Cinema.js":"18","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\utility.js":"19","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\redux\\reducers\\banner_reducer.js":"20","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\pages\\home\\MovieDetail.js":"21","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\components\\home\\BannerLeader.js":"22","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\components\\home\\ListShowing.js":"23","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\components\\home\\Cinema.js":"24","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\redux\\reducers\\news_reducer.js":"25","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\components\\home\\News.js":"26","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\pages\\home\\Article.js":"27","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\templates\\AdminTemplate.js":"28","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\pages\\admin\\AddData.js":"29","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\components\\admin\\AddMovie.js":"30","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\redux\\actions\\movie_action.js":"31","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\redux\\constants\\actionType.js":"32","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\firebase\\fbConfig.js":"33","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\components\\admin\\AddCinema.js":"34","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\redux\\actions\\cinema_action.js":"35","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\redux\\actions\\schedules_action.js":"36","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\redux\\actions\\banner_action.js":"37","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\redux\\actions\\news_action.js":"38","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\redux\\reducers\\nav_reducer.js":"39","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\redux\\actions\\nav_action.js":"40"},{"size":1235,"mtime":1611910386818,"results":"41","hashOfConfig":"42"},{"size":1151,"mtime":1613325154100,"results":"43","hashOfConfig":"42"},{"size":362,"mtime":499162500000,"results":"44","hashOfConfig":"42"},{"size":562,"mtime":1613542690936,"results":"45","hashOfConfig":"42"},{"size":162,"mtime":1608622215439,"results":"46","hashOfConfig":"42"},{"size":593,"mtime":1610964877232,"results":"47","hashOfConfig":"42"},{"size":2747,"mtime":1613841142348,"results":"48","hashOfConfig":"42"},{"size":1450,"mtime":1613657066493,"results":"49","hashOfConfig":"42"},{"size":1447,"mtime":1613841170064,"results":"50","hashOfConfig":"42"},{"size":768,"mtime":1613649397743,"results":"51","hashOfConfig":"42"},{"size":318,"mtime":1611911874675,"results":"52","hashOfConfig":"42"},{"size":891,"mtime":1613132244893,"results":"53","hashOfConfig":"42"},{"size":721,"mtime":1613642812247,"results":"54","hashOfConfig":"42"},{"size":1662,"mtime":1613629687196,"results":"55","hashOfConfig":"42"},{"size":2143,"mtime":1613630296355,"results":"56","hashOfConfig":"42"},{"size":1674,"mtime":1610010772008,"results":"57","hashOfConfig":"42"},{"size":1288,"mtime":1608802907260,"results":"58","hashOfConfig":"42"},{"size":365,"mtime":1613246921989,"results":"59","hashOfConfig":"42"},{"size":4333,"mtime":1613553323718,"results":"60","hashOfConfig":"42"},{"size":466,"mtime":1613499778178,"results":"61","hashOfConfig":"42"},{"size":13088,"mtime":1613762198747,"results":"62","hashOfConfig":"42"},{"size":4064,"mtime":1613657753033,"results":"63","hashOfConfig":"42"},{"size":10311,"mtime":1613661892015,"results":"64","hashOfConfig":"42"},{"size":6978,"mtime":1613659571680,"results":"65","hashOfConfig":"42"},{"size":293,"mtime":1613405580486,"results":"66","hashOfConfig":"42"},{"size":3635,"mtime":1613763236565,"results":"67","hashOfConfig":"42"},{"size":2787,"mtime":1613795363676,"results":"68","hashOfConfig":"42"},{"size":501,"mtime":1610965170789,"results":"69","hashOfConfig":"42"},{"size":362,"mtime":1612521658920,"results":"70","hashOfConfig":"42"},{"size":7219,"mtime":1613490539945,"results":"71","hashOfConfig":"42"},{"size":838,"mtime":1613499804778,"results":"72","hashOfConfig":"42"},{"size":790,"mtime":1613649583923,"results":"73","hashOfConfig":"42"},{"size":556,"mtime":1611910385956,"results":"74","hashOfConfig":"42"},{"size":27593,"mtime":1613583884838,"results":"75","hashOfConfig":"42"},{"size":1472,"mtime":1613292455665,"results":"76","hashOfConfig":"42"},{"size":6167,"mtime":1613642442570,"results":"77","hashOfConfig":"42"},{"size":544,"mtime":1613366043341,"results":"78","hashOfConfig":"42"},{"size":960,"mtime":1613762005788,"results":"79","hashOfConfig":"42"},{"size":376,"mtime":1613650255148,"results":"80","hashOfConfig":"42"},{"size":153,"mtime":1613649715383,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},"huz3gt",{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"85"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"85"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"85"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"85"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"85"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"85"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"85"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"85"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},"C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\index.js",["172"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './redux/reducers/index';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\nimport { createFirestoreInstance } from 'redux-firestore';\nimport thunk from 'redux-thunk';\n\nimport firebase from './firebase/fbConfig'\n\nimport \"./scss/style.scss\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk.withExtraArgument({ getFirebase })));\n\nconst rrfProps = {\n  firebase,\n  config: {},\n  dispatch: store.dispatch,\n  createFirestoreInstance\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <App />\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["173","174"],"C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\App.js",[],"C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\reportWebVitals.js",[],"C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\routes.js",[],"C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\pages\\page-not-found.js",[],"C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\templates\\HomeTemplate.js",[],"C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\components\\Navbar.js",[],"C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\pages\\home\\Home.js",["175"],"import React, { useEffect, useRef } from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport BannerLeader from '../../components/home/BannerLeader'\r\nimport ListShowing from '../../components/home/ListShowing'\r\nimport Cinema from '../../components/home/Cinema'\r\nimport News from '../../components/home/News'\r\n\r\nimport { useWindowDimension } from '../../utility'\r\nimport { setNav } from '../../redux/actions/nav_action';\r\n\r\nexport const Home = (props) => {\r\n    const { windowWidth } = useWindowDimension();\r\n    const elRef = useRef(null);\r\n    const isMobile = (windowWidth <= 620) ? true : false;\r\n\r\n    useEffect(() => {\r\n        if (elRef.current && props.nav) {\r\n            elRef.current.scrollIntoView({ behavior: 'smooth' });\r\n            props.setNav('home', false)\r\n        }\r\n    }, [props.nav])\r\n\r\n    return (\r\n        <div ref={elRef}>\r\n            <BannerLeader />\r\n            <div id=\"main-content\">\r\n                <div className=\"container\">\r\n                    <ListShowing isMobile={isMobile} />\r\n                    {(isMobile) ? null : <Cinema />}\r\n                    <News />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    nav: state.nav.home\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setNav: (name, value) => dispatch(setNav(name, value))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\r\n","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\components\\Footer.js",[],"C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\redux\\reducers\\index.js",[],"C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\redux\\reducers\\movie_reducer.js",[],"C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\redux\\reducers\\cinema_reducer.js",[],"C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\redux\\reducers\\schedule_reducer.js",["176"],"import {\r\n    GET_SCHEDULES, GET_SCHEDULES_ERROR, LOADING_SCHEDULES, GET_SCHEDULES_DETAIL\r\n} from '../constants/actionType'\r\n\r\nconst schedule = {\r\n    home: undefined,\r\n    detail: undefined,\r\n};\r\n\r\nconst scheduleReducer = (state = schedule, action) => {\r\n    switch (action.type) {\r\n        case GET_SCHEDULES:\r\n            // console.log(action.data);\r\n            return { ...state, ...action.data };\r\n        case GET_SCHEDULES_DETAIL:\r\n            // console.log(action.data);\r\n            return { ...state, ...action.data };\r\n        case GET_SCHEDULES_ERROR:\r\n            console.log(action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default scheduleReducer;","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\components\\Schedule.js",[],"C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\components\\movie\\Header.js",[],"C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\components\\movie\\Infomation.js",[],"C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\components\\movie\\circle-store.js",[],"C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\components\\movie\\Cinema.js",[],"C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\utility.js",["177","178"],"import { useState, useEffect } from 'react'\r\n\r\nexport const pad = (num) => {\r\n\tif (num < 10) {\r\n\t\treturn \"0\" + num;\r\n\t} else {\r\n\t\treturn \"\" + num;\r\n\t}\r\n}\r\n\r\n//-----Convert date to string yyyy-mm-dd (example \"1990-03-22\")\r\nexport const dateToString = (date) => {\r\n\treturn date.getFullYear() + \"-\" + pad(date.getMonth() + 1) + \"-\" + pad(date.getDate());\r\n}\r\n\r\n//-----Convert time to second\r\nexport const timestrToSec = (timestr) => {\r\n\tlet part = timestr.split(\":\");\r\n\treturn (part[0] * 3600) + (part[1] * 60);\r\n}\r\n\r\n//-----Convert second to hours (exmaple 23:00)\r\nexport const formatTime = (second) => {\r\n\treturn [pad(Math.floor(second / 3600)), pad(Math.floor(second / 60) % 60)].join(\":\");\r\n}\r\n\r\n//-----Format to vietnam region dd-mm-yyyy\r\nexport const formatVNDate = (strDate) => {\r\n\tif (strDate) {\r\n\t\tlet res = strDate.split(/[.\\-\\/ ]+/);\r\n\t\treturn `${res[2]}.${res[1]}.${res[0]}`;\r\n\t}\r\n}\r\n\r\n//-----Sum date\r\nexport const sumDate = (strDate, day) => {\r\n\tif (strDate) {\r\n\t\tlet res = strDate.split(/[.\\-\\/ ]+/);\r\n\t\tlet date = new Date(res[0], res[1], res[2]);\r\n\t\tdate.setDate(date.getDate() + day);\r\n\t\treturn dateToString(date);\r\n\t}\r\n}\r\n\r\n\r\n//------------Window Dimension\r\nconst getWindowDimension = () => {\r\n\tconst { innerWidth: windowWidth, innerHeight: windowHeight } = window;\r\n\treturn { windowWidth, windowHeight };\r\n}\r\n\r\nexport const useWindowDimension = () => {\r\n\tconst [windowDimension, setWindowDimension] = useState(getWindowDimension());\r\n\r\n\tuseEffect(() => {\r\n\t\tfunction handleResize() {\r\n\t\t\tsetWindowDimension(getWindowDimension());\r\n\t\t}\r\n\t\twindow.addEventListener('resize', handleResize)\r\n\t\treturn () => window.removeEventListener('resize', handleResize)\r\n\t}, [])\r\n\treturn windowDimension;\r\n}\r\n\r\n\r\n//------------------SCROLL TO \r\n/*\r\n// Element or Position to move + Time in ms (milliseconds)\r\nexport function scrollTo(element, duration) {\r\n\tvar e = document.documentElement;\r\n\tif (e.scrollTop === 0) {\r\n\t\tvar t = e.scrollTop;\r\n\t\t++e.scrollTop;\r\n\t\te = t + 1 === e.scrollTop-- ? e : document.body;\r\n\t}\r\n\tscrollToC(e, e.scrollTop, element, duration);\r\n}\r\n\r\n\r\n// Element to move, element or px from, element or px to, time in ms to animate\r\nfunction scrollToC(element, from, to, duration) {\r\n\tif (duration <= 0) return;\r\n\tif(typeof from === \"object\")from=from.offsetTop;\r\n\tif(typeof to === \"object\")to=to.offsetTop;\r\n\r\n\tscrollToX(element, from, to, 0, 1/duration, 20, linearTween);\r\n}\r\n\r\nfunction scrollToX(element, xFrom, xTo, t01, speed, step, motion) {\r\n\tif (t01 < 0 || t01 > 1 || speed<= 0) {\r\n\t   element.scrollTop = xTo;\r\n\t\treturn;\r\n\t}\r\n\telement.scrollTop = xFrom - (xFrom - xTo) * motion(t01);\r\n\tt01 += speed * step;\r\n\r\n\tsetTimeout(function() {\r\n\t\tscrollToX(element, xFrom, xTo, t01, speed, step, motion);\r\n\t}, step);\r\n}\r\n\r\n\r\n//-------EASE\r\nfunction linearTween(t){\r\n\treturn t;\r\n}\r\n\r\nfunction easeInQuad(t){\r\n\treturn t*t;\r\n}\r\n\r\nfunction easeOutQuad(t){\r\n\treturn -t*(t-2);\r\n}\r\n\r\nfunction easeInOutQuad(t){\r\n\tt/=0.5;\r\n\tif(t<1)return t*t/2;\r\n\tt--;\r\n\treturn (t*(t-2)-1)/2;\r\n}\r\n\r\nfunction easeInCuaic(t){\r\n\treturn t*t*t;\r\n}\r\n\r\nfunction easeOutCuaic(t){\r\n\tt--;\r\n\treturn t*t*t+1;\r\n}\r\n\r\nfunction easeInOutCuaic(t){\r\n\tt/=0.5;\r\n\tif(t<1)return t*t*t/2;\r\n\tt-=2;\r\n\treturn (t*t*t+2)/2;\r\n}\r\n\r\nfunction easeInQuart(t){\r\n\treturn t*t*t*t;\r\n}\r\n\r\nfunction easeOutQuart(t){\r\n\tt--;\r\n\treturn -(t*t*t*t-1);\r\n}\r\n\r\nfunction easeInOutQuart(t){\r\n\tt/=0.5;\r\n\tif(t<1)return 0.5*t*t*t*t;\r\n\tt-=2;\r\n\treturn -(t*t*t*t-2)/2;\r\n}\r\n\r\nfunction easeInQuint(t){\r\n\treturn t*t*t*t*t;\r\n}\r\n\r\nfunction easeOutQuint(t){\r\n\tt--;\r\n\treturn t*t*t*t*t+1;\r\n}\r\n\r\nfunction easeInOutQuint(t){\r\n\tt/=0.5;\r\n\tif(t<1)return t*t*t*t*t/2;\r\n\tt-=2;\r\n\treturn (t*t*t*t*t+2)/2;\r\n}\r\n\r\nfunction easeInSine(t){\r\n\treturn -Math.Cos(t/(Math.PI/2))+1;\r\n}\r\n\r\nfunction easeOutSine(t){\r\n\treturn Math.Sin(t/(Math.PI/2));\r\n}\r\n\r\nfunction easeInOutSine(t){\r\n\treturn -(Math.Cos(Math.PI*t)-1)/2;\r\n}\r\n\r\nfunction easeInExpo(t){\r\n\treturn Math.Pow(2,10*(t-1));\r\n}\r\n\r\nfunction easeOutExpo(t){\r\n\treturn -Math.Pow(2,-10*t)+1;\r\n}\r\n\r\nfunction easeInOutExpo(t){\r\n\tt/=0.5;\r\n\tif(t<1)return Math.Pow(2,10*(t-1))/2;\r\n\tt--;\r\n\treturn (-Math.Pow(2,-10*t)+2)/2;\r\n}\r\n\r\nfunction easeInCirc(t){\r\n\treturn -Math.Sqrt(1-t*t)-1;\r\n}\r\n\r\nfunction easeOutCirc(t){\r\n\tt--;\r\n\treturn Math.Sqrt(1-t*t);\r\n}\r\n\r\nfunction easeInOutCirc(t){\r\n\tt/=0.5;\r\n\tif(t<1)return -(Math.Sqrt(1-t*t)-1)/2;\r\n\tt-=2;\r\n\treturn (Math.Sqrt(1-t*t)+1)/2;\r\n}\r\n*/","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\redux\\reducers\\banner_reducer.js",[],"C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\pages\\home\\MovieDetail.js",["179","180"],"import React, { useState, useEffect } from 'react'\r\nimport { compose } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\n\r\nimport Schedule from '../../components/Schedule'\r\nimport Header from '../../components/movie/Header';\r\nimport Infomation from '../../components/movie/Infomation'\r\nimport Cinema from '../../components/movie/Cinema';\r\n\r\nimport { getSchedulesByMovie } from '../../redux/actions/schedules_action'\r\n\r\nimport { dateToString, useWindowDimension, formatTime, timestrToSec } from '../../utility'\r\n\r\n\r\nexport const MovieDetail = (props) => {\r\n    const { movie, cinemas, schedules, locations } = props;\r\n    const { windowWidth } = useWindowDimension();\r\n    const navList = [\"Lịch chiếu\", \"Thông tin\"];\r\n    const movieId = props.match.params.id;\r\n    const isMobile = (windowWidth <= 620) ? true : false;\r\n\r\n    const [currentCinema, setCurrentCinema] = useState(null);\r\n    const [navIndex, setNavIndex] = useState(0);\r\n    const [currentDate, setCurrentDate] = useState(dateToString(new Date()));\r\n    const [toggle, setToggle] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (schedules) {\r\n            let array = {}\r\n            Object.keys(schedules).forEach(item => {\r\n                array = { ...array, [item]: false };\r\n            })\r\n            setToggle(state => ({ ...state, ...array }))\r\n        }\r\n    }, [schedules])\r\n    useEffect(() => {\r\n        if (movie) {\r\n            props.getSchedules(movieId)\r\n        }\r\n    }, [movie])\r\n    useEffect(() => {\r\n        if (cinemas) {\r\n            setCurrentCinema(Object.keys(cinemas)[0]);\r\n        }\r\n    }, [cinemas])\r\n    useEffect(() => {\r\n        document.documentElement.scrollIntoView()\r\n    }, [])\r\n\r\n    const handleNavIndext = (index) => {\r\n        setNavIndex(index);\r\n    }\r\n    const handleSetDate = (date) => {\r\n        setCurrentDate(date);\r\n    }\r\n    const handleSetCinema = (cinema) => {\r\n        setCurrentCinema(cinema)\r\n    }\r\n\r\n\r\n    const renderListDateMobile = () => {\r\n        let content = []\r\n        let weekday = [\"CN\", \"T2\", \"T3\", \"T4\", \"T5\", \"T6\", \"T7\"];\r\n        for (let i = 0; i < 8; i++) {\r\n            let date = new Date();\r\n            date.setDate(date.getDate() + i);\r\n            let stringDate = dateToString(date);\r\n            let hadSchedule = false;\r\n            if (schedules) {\r\n                Object.keys(schedules).forEach(item => {\r\n                    if (schedules[item] && schedules[item][stringDate]) {\r\n                        hadSchedule = true;\r\n                    }\r\n                })\r\n            }\r\n            content.push(\r\n                <li key={i} onClick={() => handleSetDate(stringDate)} className={((hadSchedule) ? \"loaded\" : \"\") + ((stringDate === currentDate) ? \" active\" : \"\")}>\r\n                    <span className=\"day\">{weekday[date.getDay()]}</span>\r\n                    <span className=\"day\">{date.getDate()}</span>\r\n                </li>\r\n            )\r\n        }\r\n        return content;\r\n    }\r\n    const renderCinemaMobile = () => {\r\n            let count = 0;\r\n            let content = []\r\n            content = Object.keys(schedules).map((item, indexItem) => {\r\n                if (schedules[item] && schedules[item][currentDate]) {\r\n                    count++;\r\n                    let schedule = schedules[item][currentDate];\r\n                    let cinema = cinemas[item];\r\n                    return (\r\n                        <li key={indexItem} className=\"cinema-item\">\r\n                            <div className=\"wraps\" onClick={() => setToggle(state => ({ ...state, [item]: !state[item] }))}>\r\n                                <img src={cinema.image} alt={cinema.cinema} />\r\n                                <h3>{cinema.cinema}</h3>\r\n                                <span className=\"icon-ctrl\" />\r\n                            </div>\r\n                            <ul className={`movie-list${(toggle[item]) ? \" active\" : \"\"}`}>\r\n                                {\r\n                                    Object.keys(schedule).map((name, key) => {\r\n                                        let type = schedule[name];\r\n                                        let location = locations[name]\r\n                                        return (\r\n                                            <li key={key} className=\"movie-item\">\r\n                                                <div className=\"mini-card\">\r\n                                                    <img src={location.thumbnail} alt={`${cinema.cinema} - ${location.name}`} />\r\n                                                    <div className=\"card-body\">\r\n                                                        <h3 className=\"cards-title\">{location.name}</h3>\r\n                                                        <div className=\"address\">{location.address}</div>\r\n                                                    </div>\r\n                                                    {\r\n                                                        Object.keys(type).map((typeName, typeKey) => {\r\n                                                            return (\r\n                                                                <React.Fragment key={typeKey}>\r\n                                                                    <div className=\"version\">{typeName}</div>\r\n                                                                    <ul className=\"time-showing-list grid\">\r\n                                                                        {\r\n                                                                            type[typeName].map((time, timeKey) => {\r\n                                                                                return (\r\n                                                                                    <li key={timeKey} className=\"time-showing\">\r\n                                                                                        <span className=\"starting-time\">{time}</span><span className=\"ending-time\">{formatTime(timestrToSec(time) + (movie.length * 60))}</span>\r\n                                                                                    </li>\r\n                                                                                )\r\n                                                                            })\r\n                                                                        }\r\n                                                                    </ul>\r\n                                                                </React.Fragment>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </div>\r\n                                            </li>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </ul>\r\n                        </li>\r\n                    )\r\n                }\r\n            })\r\n            if (count > 0) {\r\n                return content\r\n            } else {\r\n                return renderEmpty();\r\n            }\r\n    }\r\n    const renderMobile = () => {\r\n        return (\r\n            <div id=\"showtimes\" className={`${(navIndex === 0) ? \"collapse-show \" : \"\"}collapse`}>\r\n                <div className=\"movie-detail\">\r\n                    <div className=\"grid\">\r\n                        <div className=\"schedule\">\r\n                            <ul className=\"list-date\">\r\n                                {renderListDateMobile()}\r\n                            </ul>\r\n                        </div>\r\n                        <ul className=\"list-cinema\">\r\n                            {(cinemas && schedules) ? renderCinemaMobile() : renderLoading()}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    const renderListDate = () => {\r\n        let content = []\r\n        let weekday = [\"CN\", \"T2\", \"T3\", \"T4\", \"T5\", \"T6\", \"T7\"];\r\n        for (let i = 0; i < 8; i++) {\r\n            let date = new Date();\r\n            date.setDate(date.getDate() + i);\r\n            let stringDate = dateToString(date);\r\n            let hadSchedule = false;\r\n            if (schedules && schedules[currentCinema] && schedules[currentCinema][stringDate]) {\r\n                hadSchedule = true;\r\n            }\r\n            content.push(\r\n                <li key={i} onClick={() => handleSetDate(stringDate)} className={((hadSchedule) ? \"loaded\" : \"\") + ((stringDate === currentDate) ? \" active\" : \"\")}>\r\n                    <span className=\"day\">{weekday[date.getDay()]}</span>\r\n                    <span className=\"day\">{date.getDate()}</span>\r\n                </li>\r\n            )\r\n        }\r\n        return content;\r\n    }\r\n    const renderListSchedule = () => {\r\n        if (Object.keys(schedules).length > 0) {\r\n            if (schedules[currentCinema] && schedules[currentCinema][currentDate]) {\r\n                let getSchedule = schedules[currentCinema][currentDate];\r\n                return Object.keys(getSchedule).map((item, index) => {\r\n                    return <Schedule key={index} schedule={getSchedule[item]} movie={movie} cinema={cinemas[currentCinema]} location={locations[item]} />\r\n                })\r\n            } else {\r\n                return renderEmpty();\r\n            }\r\n        } else {\r\n            return renderEmpty();\r\n        }\r\n    }\r\n    const renderCinema = () => {\r\n        return Object.keys(cinemas).map(item => {\r\n            let cinema = cinemas[item]\r\n            return <Cinema key={item} handleSetCinema={() => handleSetCinema(item)} id={item} cinema={cinema} active={currentCinema} />\r\n        })\r\n    }\r\n    const renderTablet = () => {\r\n        return (\r\n            <div id=\"showtimes-tablet\" className={`${(navIndex === 0) ? \"collapse-show \" : \"\"}collapse`}>\r\n                <div className=\"movie-detail\">\r\n                    <div className=\"grid\">\r\n                        <ul className=\"list-cinema\">\r\n                            {(cinemas) ? renderCinema() : renderLoading()}\r\n                        </ul>\r\n                        <div className=\"schedule\">\r\n                            <ul className=\"list-date custom-scroll\">\r\n                                {renderListDate()}\r\n                            </ul>\r\n                            <ul className=\"movie-list custom-scroll\">\r\n                                {(schedules && currentCinema) ? renderListSchedule() : renderLoading()}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    const renderLoading = (heigh = 'auto') => {\r\n        return <div style={{ textAlign: \"center\", height: heigh }}>loading</div>\r\n    }\r\n    const renderEmpty = (heigh = 'auto') => {\r\n        return <div style={{ textAlign: \"center\", height: heigh }}>empty content</div>\r\n    }\r\n\r\n\r\n    return (movie !== null) ? (\r\n        <div id=\"movie-content\">\r\n            <div className=\"container\">\r\n                <div id=\"content-title\">\r\n                    <div className=\"title\">\r\n                        {(movie) ? <Header isMobile={isMobile} movie={movie} /> : renderLoading('450px')}\r\n                    </div>\r\n                    <div className=\"detail\">\r\n                        <ul className=\"nav-tab\">\r\n                            {\r\n                                navList.map((item, index) => {\r\n                                    return (\r\n                                        <li key={index} onClick={() => handleNavIndext(index)} className={(index === navIndex) ? \"active\" : \"\"}><button>{item}</button></li>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </ul>\r\n                        {(isMobile) ? renderMobile() : renderTablet()}\r\n                        <div id=\"info-movie\" className={`${(navIndex === 1) ? \"collapse-show \" : \"\"}collapse`}>\r\n                            {(movie) ? <Infomation movie={movie} /> : renderLoading()}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ) : <Redirect to='/page-not-found' />\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    movie: state.firestore.data.movie,\r\n    schedules: state.schedules.detail,\r\n    cinemas: state.firestore.data.cinemas,\r\n    locations: state.firestore.data.locations,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getSchedules: idMovie => dispatch(getSchedulesByMovie(idMovie))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect(props => [\r\n        { collection: 'movies', doc: props.match.params.id, storeAs: 'movie' },\r\n        { collection: 'cinemas' },\r\n        { collectionGroup: 'locations' }\r\n    ])\r\n)(MovieDetail)","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\components\\home\\BannerLeader.js",["181","182"],"import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { useTransition, animated } from 'react-spring'\r\n\r\nimport { getBanners } from '../../redux/actions/banner_action'\r\n\r\nexport const BannerLeader = (props) => {\r\n    const { banners } = props\r\n    const [indexBanner, setIndexBanner] = useState(0);\r\n    const transition = useTransition(indexBanner, null, {\r\n        initial: null,\r\n        from: { opacity: 0, display: 'none' },\r\n        enter: { opacity: 1, display: 'block' },\r\n        leave: { opacity: 0, display: 'none' },\r\n        config: { tension: 500 }\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        props.getBanners()\r\n    }, [])\r\n\r\n\r\n    const handleSlide = (direction) => {\r\n        let current = indexBanner + direction;\r\n        if (current < 0) {\r\n            current = banners.length - 1;\r\n        }\r\n        if (current >= banners.length) {\r\n            current = 0;\r\n        }\r\n        setIndexBanner(current);\r\n    }\r\n    const handleDotCtrl = (index) => {\r\n        setIndexBanner(index)\r\n    }\r\n\r\n\r\n    const renderBackground = () => {\r\n        if (banners.length > 0) {\r\n            return transition.map(({ item, props, key }) => {\r\n                return <animated.img key={key} style={{ ...props }} src={banners[item].background} alt={`background ${banners[item].titleEN}`} />\r\n            })\r\n        }\r\n    }\r\n    const renderContent = () => {\r\n        return banners.map((item, index) => {\r\n            return (\r\n                <li key={index} className={`item-content${(index === indexBanner) ? \" active\" : \"\"}`}>\r\n                    <h2 className=\"banner-title\"><Link to={`/movie/detail/${item.movieId}`}>{`${item.titleVN} - ${item.titleEN}`}</Link></h2>\r\n                    <p className=\"banner-content\">{item.content}</p>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n    const renderDotCtrl = () => {\r\n        return banners.map((item, index) => {\r\n            return <span key={index} onClick={() => this.handleDotCtrl(index)} className={`dot-ctrl${(index === indexBanner) ? \" active\" : \"\"}`} />\r\n        })\r\n    }\r\n    const renderSubBanner = () => {\r\n        if (banners.length > 0) {\r\n            return transition.map(({item, props, key}) => {\r\n                return <Link key={key} to={`/movie/detail/${banners[item].movieId}`}><animated.img style={{...props}} className=\"myslide\" src={banners[item].image} alt={banners[item].titleEN} /></Link>\r\n            })\r\n        }\r\n    }\r\n    const rennderLoading = () => {\r\n        return <div style={{ textAlign: \"center\" }}>loading</div>\r\n    }\r\n\r\n\r\n    return (\r\n        <div id=\"lead-banner\">\r\n            <div className=\"pack\">\r\n                <div className=\"bg-banner\">\r\n                    {(banners) && renderBackground() }\r\n                </div>\r\n                <div className=\"grid\">\r\n                    <div className=\"content-banner\">\r\n                        <ul className=\"list-content\">\r\n                            {(banners) ? renderContent() : rennderLoading()}\r\n                        </ul>\r\n                        <div className=\"slide-controller\">\r\n                            <div onClick={() => handleSlide(-1)} className=\"prev-btn ctrl-btn\">❮</div>\r\n                            <div onClick={() => handleSlide(1)} className=\"next-btn ctrl-btn\">❯</div>\r\n                            <div className=\"list-dot-ctrl\">\r\n                                {(banners) && renderDotCtrl()}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"sub-banner\">\r\n                        {(banners) && renderSubBanner()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    banners: state.banners\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getBanners: () => { dispatch(getBanners()) }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BannerLeader)","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\components\\home\\ListShowing.js",["183","184","185"],"import React, { useState, useEffect, useCallback, useRef } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useTransition, animated } from 'react-spring'\r\nimport { Link } from 'react-router-dom'\r\nimport { compose } from 'redux';\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\n\r\n\r\nimport { dateToString } from '../../utility'\r\nimport { setNav } from '../../redux/actions/nav_action';\r\n\r\n\r\nexport const ListShowing = (props) => {\r\n    const { isMobile, movies, coming } = props;\r\n    const [carousel, setCarousel] = useState(0);\r\n    const [isComing, setIsComing] = useState(false);\r\n    const [dir, setDir] = useState(1);\r\n    const [arrayCarousel, setArrayCarousel] = useState(null);\r\n    const [arrayCarouselComing, setArrayCarouselComing] = useState(null);\r\n    const showingId = 'movie';\r\n    const elRef = useRef(null);\r\n    const transitions = useTransition(carousel, null, {\r\n        initial: null,\r\n        from: { opacity: 0, transform: `translate3d(${dir * 100}%,0,0)` },\r\n        enter: { opacity: 1, transform: 'translate3d(0%,0,0' },\r\n        leave: { opacity: 0, transform: `translate3d(${dir * -100}%,0,0)` }\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        if (elRef.current && props.nav) {\r\n            elRef.current.scrollIntoView({ behavior: 'smooth' });\r\n            props.setNav('showing', false)\r\n        }\r\n    }, [props.nav])\r\n    useEffect(() => {\r\n        if (movies) {\r\n            let numberCarousel = Math.ceil(movies.length / 8);\r\n            let movieArray = [];\r\n            for (let i = 0; i < numberCarousel; i++) {\r\n                if (i === numberCarousel - 1 && i !== 0) {\r\n                    movieArray[i] = movies.slice(i * 8, i * 8 + movies.length % 8);\r\n                } else {\r\n                    movieArray[i] = movies.slice(i * 8, i * 8 + 8);\r\n                }\r\n            }\r\n            setArrayCarousel(movieArray);\r\n        }\r\n    }, [movies])\r\n    useEffect(() => {\r\n        if (coming) {\r\n            let numberCarousel = Math.ceil(coming.length / 8);\r\n            let movieArray = [];\r\n            for (let i = 0; i < numberCarousel; i++) {\r\n                if (i === numberCarousel - 1 && i !== 0) {\r\n                    movieArray[i] = coming.slice(i * 8, i * 8 + coming.length % 8);\r\n                } else {\r\n                    movieArray[i] = coming.slice(i * 8, i * 8 + 8);\r\n                }\r\n            }\r\n            setArrayCarouselComing(movieArray);\r\n        }\r\n    }, [coming])\r\n\r\n\r\n    const handleCarousel = useCallback((direction) => {\r\n        let current = carousel + direction;\r\n        let length = Math.ceil(movies.length / 8);\r\n        if (current < 0) {\r\n            current = length - 1;\r\n        }\r\n        if (current >= length) {\r\n            current = 0;\r\n        }\r\n        setDir(direction);\r\n        setCarousel(current);\r\n    })\r\n    const handleCarouselMobile = useCallback((direction) => {\r\n        let current = carousel + direction;\r\n        let length = Math.ceil(movies.length / 8);\r\n        if (current < 0) {\r\n            current = length - 1;\r\n        }\r\n        if (current >= length) {\r\n            current = 0;\r\n        }\r\n        setDir(direction);\r\n        setCarousel(current);\r\n        elRef.current.scrollIntoView()\r\n    })\r\n\r\n\r\n    //----------Showing component\r\n    const ShowingTablet = ({ content }) => {\r\n        return (\r\n            <li className=\"item-list\">\r\n                <Link to={`/movie/detail/${content.id}`}>\r\n                    <div className=\"card\">\r\n                        <img src={content.image} alt={content.titleEN} />\r\n                        <div className=\"card-title\">\r\n                            <span className=\"rating\">\r\n                                <i className=\"fas fa-star\" />{content.score}</span>\r\n                            <h3><span className=\"age\"><i className={content.age}>{content.age}</i></span>{`${content.titleVN} - ${content.titleEN}`}</h3>\r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n            </li>\r\n        )\r\n    }\r\n    const ShowingMobile = ({ content }) => {\r\n        return (\r\n            <li className=\"item-list\">\r\n                <Link to={`/movie/detail/${content.id}`}>\r\n                    <div className=\"card\">\r\n                        <img src={content.imageMobile} alt={content.titleEN} />\r\n                        <ul className=\"list-icon\">\r\n                            <li className=\"icon-item\">\r\n                                <span className=\"rating-star\">\r\n                                    <i className=\"fas fa-star\" />{content.score}</span>\r\n                            </li>\r\n                            <li className=\"icon-item\">\r\n                                <span className=\"age\"><i className={content.age}>{content.age}</i></span>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </Link>\r\n            </li>\r\n        )\r\n    }\r\n\r\n\r\n    const renderTabletShowing = (array) => {\r\n        if (array && array.length > 0) {\r\n            if (array[carousel].length > 0) {\r\n                return (\r\n                    <div className=\"large-show\">\r\n                        {transitions.map(({ item, props, key }) => {\r\n                            return (\r\n                                <animated.div key={key} style={{ ...props }} className=\"carousel\">\r\n                                    <ul className=\"list-item grid\">\r\n                                        {\r\n                                            array[carousel].map((item, index) => {\r\n                                                return (\r\n                                                    <ShowingTablet key={index} content={item} />\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </ul>\r\n                                </animated.div>\r\n                            )\r\n                        })}\r\n                        <div className=\"large-ctrl\">\r\n                            <button onClick={() => handleCarousel(-1)} className=\"prev-btn ctrl-btn\" />\r\n                            <button onClick={() => handleCarousel(1)} className=\"next-btn ctrl-btn\" />\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        } else {\r\n            return renderEmpty();\r\n        }\r\n    }\r\n\r\n    const renderMobile = (array) => {\r\n        console.log(array);\r\n        if (array && array.length > 0) {\r\n            if (array[carousel].length > 0) {\r\n                return (\r\n                    <div className=\"mini-show\">\r\n                        <ul className=\"list-item\">\r\n                            {\r\n                                array[carousel].map((item, index) => {\r\n                                    return (\r\n                                        <ShowingMobile key={index} content={item} />\r\n                                    )\r\n                                })\r\n                            }\r\n                        </ul>\r\n                        <div className=\"movie-ctrl\">\r\n                            <button onClick={() => handleCarouselMobile(-1)} className=\"prev-btn\">❮</button>\r\n                            <button onClick={() => handleCarouselMobile(1)} className=\"next-btn\">❯</button>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        } else {\r\n            return renderEmpty();\r\n        }\r\n    }\r\n    const renderLoading = () => {\r\n        return (\r\n            <div style={{ textAlign: \"center\" }}>loading</div>\r\n        )\r\n    }\r\n\r\n    const renderEmpty = () => {\r\n        return (\r\n            <div style={{ textAlign: \"center\" }}>empty content</div>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <section id={showingId} ref={elRef}>\r\n            <div className=\"main-title\">\r\n                <h2>Movie</h2>\r\n            </div>\r\n            <ul className=\"nav-tab\">\r\n                <li className={`${(isComing) ? \"\" : \"active\"}`} ><button onClick={() => { setIsComing(false); setCarousel(0) }} className=\"showing\">Đang Chiếu</button></li>\r\n                <li className={`${(!isComing) ? \"\" : \"active\"}`} ><button onClick={() => { setIsComing(true); setCarousel(0) }} className=\"coming\">Sắp Chiếu</button></li>\r\n            </ul>\r\n            <div className=\"body-content\">\r\n                {movies ? (isMobile) ? renderMobile((isComing) ? arrayCarouselComing : arrayCarousel) : renderTabletShowing((isComing) ? arrayCarouselComing : arrayCarousel) : renderLoading()}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    movies: state.firestore.ordered.movies,\r\n    nav: state.nav.showing,\r\n    coming: state.firestore.ordered.coming\r\n    // movies: [\r\n    //     {age: \"c18\",background: \"/images/slide_4.jpg\",cast: \"Kelly Marie Tran, Cloris Leachman, Catherine Keener, Ryan Reynolds, Emma Stone, Nicolas Cage\",category: \"Hài, Hoạt Hình\",describes: \"Lorem ipsum, dolor sit amet consectetur adipisicing elit. Facere voluptate quam quae dicta ad quos, numquam et illum illo accusamus nesciunt voluptatem dignissimos fugiat quasi debitis eos, officia assumenda quia?\",expireTime: \"2021-02-20\",id: \"iU3CD34NCR29Kg2XNIhm\",image: \"/images/banner_peninsula.jpg\",imageMobile: \"/images/slide_4.jpg\",imdb: \"0\",length: \"103\",nation: \"Mỹ\",producer: \"Joel Crawford\",release: \"2021-01-05\",score: \"5.5\",thumbnail: \"https://via.placeholder.com/150.png\",titleEN: \"Peninsula\",titleVN: \"Bán đảo Peninsula\",type: \"2D/Digital\"},\r\n    // ]\r\n})\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setNav: (name, value) => dispatch(setNav(name, value))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([\r\n        {\r\n            collection: \"movies\",\r\n            where: [[\"isShowing\", \"==\", true], [\"expireTime\", \">=\", dateToString(new Date())]],\r\n            orderBy: [\"expireTime\", \"desc\"]\r\n        },\r\n        {\r\n            collection: \"movies\",\r\n            where: [[[\"isShowing\", \"==\", false]], [\"release\", \">=\", dateToString(new Date())]],\r\n            orderBy: [\"release\", \"asc\"],\r\n            storeAs: 'coming'\r\n        }\r\n    ])\r\n)(ListShowing)","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\components\\home\\Cinema.js",["186","187","188","189"],"import React, { useState, useEffect, useRef } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\n\r\nimport { dateToString, timestrToSec, formatTime } from '../../utility'\r\nimport { getLocation } from '../../redux/actions/cinema_action'\r\nimport { getSchedulesByLocation } from '../../redux/actions/schedules_action'\r\nimport { setNav } from '../../redux/actions/nav_action'\r\n\r\nexport const Cinema = (props) => {\r\n    const { cinemas, cinemaData, movies, schedules, nav } = props\r\n    const [keyCinema, setKeyCinema] = useState(null);\r\n    const [keyLocation, setKeyLocation] = useState(null);\r\n    const elRef = useRef(null);\r\n    const componentId = 'cinema';\r\n\r\n\r\n    //--------useEffect\r\n    useEffect(() => {\r\n        if (cinemas) {\r\n            setKeyCinema(Object.keys(cinemas)[0]);\r\n        }\r\n    }, [cinemas])\r\n    useEffect(() => {\r\n        if (keyCinema) {\r\n            props.getLocations(keyCinema);\r\n        }\r\n    }, [keyCinema])\r\n    useEffect(() => {\r\n        if (Object.keys(cinemaData).length > 0) {\r\n            if (cinemaData.locations.length > 0) {\r\n                setKeyLocation(cinemaData.locations[0].id);\r\n            }\r\n        }\r\n    }, [cinemaData])\r\n    useEffect(() => {\r\n        if (keyLocation) {\r\n            props.getSchedules(keyCinema, keyLocation);\r\n        }\r\n    }, [keyLocation])\r\n    useEffect(() => {\r\n        if (elRef.current && props.nav) {\r\n            elRef.current.scrollIntoView({ behavior: 'smooth' });\r\n            props.setNav('cinema', false)\r\n        }\r\n    }, [nav])\r\n\r\n\r\n    //--------Handle click\r\n    const handleClickCinema = (key) => {\r\n        setKeyLocation(null)\r\n        setKeyCinema(key);\r\n    }\r\n    const handleClickLocation = (key) => {\r\n        setKeyLocation(key)\r\n    }\r\n\r\n\r\n    //--------Render jsx\r\n    const renderCinema = () => {\r\n        return Object.keys(cinemas).map((key, index) => {\r\n            const item = cinemas[key];\r\n            return (\r\n                <li key={index} onClick={() => handleClickCinema(key)} className={`cinema-item${(keyCinema === key) ? \" active\" : \"\"}`}>\r\n                    <a>\r\n                        <img src={item.image} alt={item.cinema} />\r\n                        <h3>{item.cinema}</h3>\r\n                    </a>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n    const renderLocation = () => {\r\n        return cinemaData.locations.map((item, index) => (\r\n            <li key={index} onClick={() => handleClickLocation(item.id)} className={`location-item${(keyLocation === item.id) ? \" active\" : \"\"}`}>\r\n                <div className=\"mini-card\">\r\n                    <img src={item.thumbnail} alt={`${cinemas[keyCinema].cinema} ${item.name}`} />\r\n                    <div className=\"card-body\">\r\n                        <h3 className=\"cards-title\"><span className={cinemas[keyCinema].className}>{cinemas[keyCinema].cinema}</span> - {item.name}</h3>\r\n                        <div className=\"address\">{item.address}</div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        ))\r\n    }\r\n    const renderSchedule = () => {\r\n        return Object.keys(schedules).map((item, index) => {\r\n            let movie = movies[item];\r\n            return (\r\n                <li key={index} className=\"movie-item\">\r\n                    <div className=\"mini-card\">\r\n                        <img src={movie.thumbnail} alt={`${movie.titleVN} - ${movie.titleEN}`} />\r\n                        <div className=\"card-body\">\r\n                            <h3 className=\"cards-title\"><span className=\"age\"><i className={movie.age}>{movie.age}</i></span>{`${movie.titleVN} - ${movie.titleEN}`}</h3>\r\n                            <div className=\"address\">{`${movie.length} phút - ${movie.imdb} imdb`}</div>\r\n                        </div>\r\n                        {Object.keys(schedules[item]).map((type, typeIndex) => (\r\n                            <div key={typeIndex}>\r\n                                <div className=\"version\">{type}</div>\r\n                                <ul className=\"time-showing-list grid\">\r\n                                    {schedules[item][type].map((time, timeIndex) => (\r\n                                        <li key={timeIndex} className=\"time-showing\">\r\n                                            <span className=\"starting-time\">{time}</span><span className=\"ending-time\">{formatTime(timestrToSec(time) + (movie.length * 60))}</span>\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n    const renderLoading = () => {\r\n        return <div style={{ textAlign: \"center\" }}>loading</div>\r\n    }\r\n    const renderEmpty = () => {\r\n        return <div style={{ textAlign: \"center\" }}>empty content</div>\r\n    }\r\n\r\n\r\n    return (\r\n        <section id={componentId} ref={elRef}>\r\n            <div className=\"wrap\">\r\n                <div className=\"line\" />\r\n                <div className=\"main-title\">\r\n                    <h2>Cinema</h2>\r\n                </div>\r\n                <div className=\"body-content\">\r\n                    <div className=\"flex\">\r\n                        <ul className=\"cinema-list custom-scroll\">\r\n                            {(cinemas) ? ((Object.keys(cinemas).length > 0) ? renderCinema() : renderEmpty()) : renderLoading()}\r\n                        </ul>\r\n                        <ul className=\"location-list custom-scroll\">\r\n                            {(keyLocation) ? ((cinemaData.locations.length > 0) ? renderLocation() : renderEmpty()) : renderLoading()}\r\n                        </ul>\r\n                        <ul className=\"movie-list custom-scroll\">\r\n                            {(schedules) ? ((Object.keys(schedules).length > 0) ? renderSchedule() : renderEmpty()) : renderLoading()}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    cinemas: state.firestore.data.cinemas,\r\n    movies: state.firestore.data.movies,\r\n    schedules: state.schedules.home,\r\n    cinemaData: state.cinema,\r\n    nav: state.nav.cinema\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setNav: (name, value) => dispatch(setNav(name, value)),\r\n        getLocations: idCinema => dispatch(getLocation(idCinema)),\r\n        getSchedules: (keyCinema, keyLocation) => dispatch(getSchedulesByLocation(keyCinema, keyLocation))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([\r\n        { collection: \"cinemas\" },\r\n        { collection: \"movies\", where: [[\"isShowing\", \"==\", true], ['expireTime', '>=', dateToString(new Date())]], orderBy: ['expireTime', 'desc'] }\r\n    ])\r\n)(Cinema)","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\redux\\reducers\\news_reducer.js",[],"C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\components\\home\\News.js",["190","191","192","193"],"import React, { useState, useEffect, useRef } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { getNewsByCategory } from '../../redux/actions/news_action'\r\nimport { setNav } from '../../redux/actions/nav_action'\r\n\r\nexport const News = (props) => {\r\n    const { news } = props\r\n    const [navIndex, setNavIndex] = useState(0);\r\n    const [multiple, setMultiple] = useState(1);\r\n    const elRef = useRef(null);\r\n    const newsId = 'news';\r\n    let nav = {\r\n        name: [\"Tổng hợp\", \"Review\", \"Khuyến mãi\"],\r\n        type: [\"all\", \"review\", \"sale\"]\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        props.getNews(nav.type[navIndex], multiple);\r\n    }, [navIndex, multiple])\r\n    useEffect(() => {\r\n        if (elRef.current && props.nav) {\r\n            elRef.current.scrollIntoView({ behavior: 'smooth' });\r\n            props.setNav('news', false)\r\n        }\r\n    }, [props.nav])\r\n\r\n\r\n    const handleClickNav = (index) => {\r\n        setNavIndex(index)\r\n        setMultiple(1)\r\n    }\r\n\r\n\r\n    const renderNav = () => {\r\n        return nav.name.map((item, index) => {\r\n            return <li key={index} onClick={() => handleClickNav(index)} className={(index === navIndex) ? \"active\" : \"\"}><button>{item}</button></li>\r\n        })\r\n    }\r\n    const renderNews = () => {\r\n        return news.map((item, index) => {\r\n            return (\r\n                <li key={index} className=\"item-news\">\r\n                    <div className=\"article\">\r\n                        <Link to={`/article/${item.id}`}>\r\n                            <img src={(index % 8 > 0 && index % 8 < 5) ? item.thumbnail : item.image} alt={item.title} />\r\n                        </Link>\r\n                        <div className=\"cards-title\">\r\n                            <Link to={`/article/${item.id}`}>\r\n                                <h3>{item.title}</h3>\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"cards-content\">{item.subContent}</div>\r\n                    </div>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n    const renderLoading = () => {\r\n        return <div style={{ textAlign: \"center\", height: '701px' }}>loading</div>\r\n    }\r\n    const renderEmpty = () => {\r\n        return <div style={{ textAlign: \"center\", height: '701px' }}>empty content</div>\r\n    }\r\n    \r\n    return (\r\n        <section id=\"news\" ref={elRef}>\r\n            <div className=\"wrap\">\r\n                <div className=\"line\" />\r\n                <div className=\"main-title\">\r\n                    <h2>News</h2>\r\n                </div>\r\n                <ul className=\"nav-tab\">\r\n                    {renderNav()}\r\n                </ul>\r\n                <ul className=\"list-news\">\r\n                    {(news.length > 0) ? renderNews() : renderLoading()}\r\n                </ul>\r\n                <div className=\"ctrl-insert\">\r\n                    <button onClick={() => setMultiple(multiple + 1)} disabled={(multiple * 8 > news.length)?true:false} style={(multiple * 8 > news.length)?{backgroundColor:'#bf4145'}:{}} className=\"btn\">{(multiple * 8 > news.length)?\"Hết tin tức\":\"xem thêm\"}</button>\r\n            </div>\r\n            </div>\r\n        </section >\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    news: state.news,\r\n    nav: state.nav.news\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getNews: (catagory, multiple) => dispatch(getNewsByCategory(catagory, multiple)),\r\n        setNav: (name, value) => dispatch(setNav(name, value))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(News)","C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\pages\\home\\Article.js",["194"],"C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\templates\\AdminTemplate.js",[],"C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\pages\\admin\\AddData.js",[],"C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\components\\admin\\AddMovie.js",[],"C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\redux\\actions\\movie_action.js",[],"C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\redux\\constants\\actionType.js",[],"C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\firebase\\fbConfig.js",[],"C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\components\\admin\\AddCinema.js",[],"C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\redux\\actions\\cinema_action.js",[],"C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\redux\\actions\\schedules_action.js",[],"C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\redux\\actions\\banner_action.js",[],"C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\redux\\actions\\news_action.js",[],"C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\redux\\reducers\\nav_reducer.js",[],"C:\\Users\\tranm\\OneDrive\\Documents\\reactjs\\movie-app\\src\\redux\\actions\\nav_action.js",[],{"ruleId":"195","severity":1,"message":"196","line":7,"column":40,"nodeType":"197","messageId":"198","endLine":7,"endColumn":47},{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","severity":1,"message":"204","line":22,"column":8,"nodeType":"205","endLine":22,"endColumn":19,"suggestions":"206"},{"ruleId":"195","severity":1,"message":"207","line":2,"column":41,"nodeType":"197","messageId":"198","endLine":2,"endColumn":58},{"ruleId":"208","severity":1,"message":"209","line":30,"column":32,"nodeType":"210","messageId":"211","endLine":30,"endColumn":33,"suggestions":"212"},{"ruleId":"208","severity":1,"message":"209","line":38,"column":32,"nodeType":"210","messageId":"211","endLine":38,"endColumn":33,"suggestions":"213"},{"ruleId":"203","severity":1,"message":"214","line":42,"column":8,"nodeType":"205","endLine":42,"endColumn":15,"suggestions":"215"},{"ruleId":"216","severity":1,"message":"217","line":90,"column":68,"nodeType":"218","messageId":"219","endLine":90,"endColumn":70},{"ruleId":"203","severity":1,"message":"204","line":22,"column":8,"nodeType":"205","endLine":22,"endColumn":10,"suggestions":"220"},{"ruleId":"195","severity":1,"message":"221","line":35,"column":11,"nodeType":"197","messageId":"198","endLine":35,"endColumn":24},{"ruleId":"203","severity":1,"message":"204","line":35,"column":8,"nodeType":"205","endLine":35,"endColumn":19,"suggestions":"222"},{"ruleId":"203","severity":1,"message":"223","line":66,"column":28,"nodeType":"197","endLine":66,"endColumn":39},{"ruleId":"203","severity":1,"message":"223","line":78,"column":34,"nodeType":"197","endLine":78,"endColumn":45},{"ruleId":"203","severity":1,"message":"204","line":29,"column":8,"nodeType":"205","endLine":29,"endColumn":19,"suggestions":"224"},{"ruleId":"203","severity":1,"message":"225","line":41,"column":8,"nodeType":"205","endLine":41,"endColumn":21,"suggestions":"226"},{"ruleId":"203","severity":1,"message":"204","line":47,"column":8,"nodeType":"205","endLine":47,"endColumn":13,"suggestions":"227"},{"ruleId":"228","severity":1,"message":"229","line":66,"column":21,"nodeType":"230","endLine":66,"endColumn":24},{"ruleId":"195","severity":1,"message":"231","line":13,"column":11,"nodeType":"197","messageId":"198","endLine":13,"endColumn":17},{"ruleId":"203","severity":1,"message":"232","line":22,"column":8,"nodeType":"205","endLine":22,"endColumn":28,"suggestions":"233"},{"ruleId":"203","severity":1,"message":"204","line":28,"column":8,"nodeType":"205","endLine":28,"endColumn":19,"suggestions":"234"},{"ruleId":"195","severity":1,"message":"235","line":64,"column":11,"nodeType":"197","messageId":"198","endLine":64,"endColumn":22},{"ruleId":"195","severity":1,"message":"235","line":36,"column":11,"nodeType":"197","messageId":"198","endLine":36,"endColumn":22},"no-unused-vars","'compose' is defined but never used.","Identifier","unusedVar","no-native-reassign",["236"],"no-negated-in-lhs",["237"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["238"],"'LOADING_SCHEDULES' is defined but never used.","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["239","240"],["241","242"],"React Hook useEffect has missing dependencies: 'movieId' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["243"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["244"],"'handleDotCtrl' is assigned a value but never used.",["245"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?",["246"],"React Hook useEffect has missing dependencies: 'keyCinema' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["247"],["248"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'newsId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'nav.type' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["249"],["250"],"'renderEmpty' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"251","fix":"252"},{"messageId":"253","fix":"254","desc":"255"},{"messageId":"256","fix":"257","desc":"258"},{"messageId":"253","fix":"259","desc":"255"},{"messageId":"256","fix":"260","desc":"258"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"251","fix":"265"},{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"251","fix":"274"},"Update the dependencies array to be: [props, props.nav]",{"range":"275","text":"276"},"removeEscape",{"range":"277","text":"278"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"279","text":"280"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"281","text":"278"},{"range":"282","text":"280"},"Update the dependencies array to be: [movie, movieId, props]",{"range":"283","text":"284"},"Update the dependencies array to be: [props]",{"range":"285","text":"286"},{"range":"287","text":"276"},"Update the dependencies array to be: [keyCinema, props]",{"range":"288","text":"289"},"Update the dependencies array to be: [keyCinema, keyLocation, props]",{"range":"290","text":"291"},"Update the dependencies array to be: [nav, props]",{"range":"292","text":"293"},"Update the dependencies array to be: [navIndex, multiple, props, nav.type]",{"range":"294","text":"295"},{"range":"296","text":"276"},[799,810],"[props, props.nav]",[833,834],"",[833,833],"\\",[1004,1005],[1004,1004],[1564,1571],"[movie, movieId, props]",[719,721],"[props]",[1355,1366],[1020,1031],"[keyCinema, props]",[1395,1408],"[keyCinema, keyLocation, props]",[1605,1610],"[nav, props]",[700,720],"[navIndex, multiple, props, nav.type]",[915,926]]